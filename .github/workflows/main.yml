# .github/workflows/build-from-gitea-final-robust.yml
name: Build From Gitea & Push with Clean Tags

on:
  push:
    paths:
      - 'trigger.txt'
  workflow_dispatch:

jobs:
  # ==================================
  # AMD64 Build Job
  # ==================================
  build-amd64:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.build_and_push.outputs.digest }}
      sha: ${{ steps.gitea_commit.outputs.sha }}
      
    steps:
      - name: Clone Gitea repository
        id: gitea_commit
        run: |
          git clone https://github.com/${{ github.repository }}.git trigger_repo && COMMIT_SHA=$(cat trigger_repo/trigger.txt) && rm -rf trigger_repo
          git clone https://${{ secrets.GITEA_USERNAME }}:${{ secrets.GITEA_CODE_PAT }}@${{ secrets.GITEA_HOST }}/${{ secrets.GITEA_REPO_PATH }}.git .
          git checkout $COMMIT_SHA
          FINAL_SHA=$(git rev-parse HEAD)
          echo "GITEA_COMMIT_SHA=${FINAL_SHA}" >> $GITHUB_ENV
          echo "sha=${FINAL_SHA}" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm install -g pnpm && cd web && pnpm install --frozen-lockfile && pnpm build

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with: { registry: '${{ secrets.GITEA_HOST }}', username: '${{ secrets.GITEA_USERNAME }}', password: '${{ secrets.GITEA_REGISTRY_PAT }}' }
      - uses: docker/login-action@v3
        with: { registry: 'ghcr.io', username: '${{ github.actor }}', password: '${{ secrets.GITHUB_TOKEN }}' }
      
      - name: Build and push image by digest
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64
          provenance: false
          push: true
          labels: org.opencontainers.image.version=${{ steps.gitea_commit.outputs.sha }}

  # ==================================
  # ARM64 Build Job
  # ==================================
  build-arm64:
    runs-on: ubuntu-latest-arm64
    permissions:
      contents: read
      packages: write
    outputs:
      digest: ${{ steps.build_and_push.outputs.digest }}
      sha: ${{ steps.gitea_commit.outputs.sha }}

    steps:
      - name: Clone Gitea repository
        id: gitea_commit
        run: |
          git clone https://github.com/${{ github.repository }}.git trigger_repo && COMMIT_SHA=$(cat trigger_repo/trigger.txt) && rm -rf trigger_repo
          git clone https://${{ secrets.GITEA_USERNAME }}:${{ secrets.GITEA_CODE_PAT }}@${{ secrets.GITEA_HOST }}/${{ secrets.GITEA_REPO_PATH }}.git .
          git checkout $COMMIT_SHA
          FINAL_SHA=$(git rev-parse HEAD)
          echo "GITEA_COMMIT_SHA=${FINAL_SHA}" >> $GITHUB_ENV
          echo "sha=${FINAL_SHA}" >> $GITHUB_OUTPUT

      - uses: actions/setup-node@v4
        with: { node-version: '20' }
      - run: npm install -g pnpm && cd web && pnpm install --frozen-lockfile && pnpm build

      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with: { registry: '${{ secrets.GITEA_HOST }}', username: '${{ secrets.GITEA_USERNAME }}', password: '${{ secrets.GITEA_REGISTRY_PAT }}' }
      - uses: docker/login-action@v3
        with: { registry: 'ghcr.io', username: '${{ github.actor }}', password: '${{ secrets.GITHUB_TOKEN }}' }
      
      - name: Build and push image by digest
        id: build_and_push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/arm64
          provenance: false
          push: true
          labels: org.opencontainers.image.version=${{ steps.gitea_commit.outputs.sha }}

  # ==================================
  # Merge Job
  # ==================================
  merge-manifest:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - uses: docker/login-action@v3
        with: { registry: '${{ secrets.GITEA_HOST }}', username: '${{ secrets.GITEA_USERNAME }}', password: '${{ secrets.GITEA_REGISTRY_PAT }}' }
      - uses: docker/login-action@v3
        with: { registry: 'ghcr.io', username: '${{ github.actor }}', password: '${{ secrets.GITHUB_TOKEN }}' }

      - name: Create and push manifest lists to both registries
        run: |
          # 现在可以清晰地引用每个 job 的输出
          DIGEST_AMD64="${{ needs.build-amd64.outputs.digest }}"
          DIGEST_ARM64="${{ needs.build-arm64.outputs.digest }}"
          COMMIT_SHA="${{ needs.build-amd64.outputs.sha }}" # 从任意一个 job 获取 sha 即可

          GITEA_IMAGE_BASE="${{ secrets.GITEA_HOST }}/${{ secrets.GITEA_REPO_PATH }}"
          GHCR_IMAGE_BASE="ghcr.io/${{ github.repository }}"
          VERSION_SHA="git-$(echo ${COMMIT_SHA} | cut -c1-7)"

          # --- Gitea Manifest ---
          echo "Creating and pushing Gitea manifests..."
          docker manifest create "${GITEA_IMAGE_BASE}:${VERSION_SHA}" "${GITEA_IMAGE_BASE}@${DIGEST_AMD64}" "${GITEA_IMAGE_BASE}@${DIGEST_ARM64}"
          docker manifest push "${GITEA_IMAGE_BASE}:${VERSION_SHA}"
          docker manifest create "${GITEA_IMAGE_BASE}:latest" "${GITEA_IMAGE_BASE}@${DIGEST_AMD64}" "${GITEA_IMAGE_BASE}@${DIGEST_ARM64}"
          docker manifest push "${GITEA_IMAGE_BASE}:latest"
          
          # --- GitHub Manifest ---
          echo "Creating and pushing GitHub manifests..."
          docker manifest create "${GHCR_IMAGE_BASE}:${VERSION_SHA}" "${GHCR_IMAGE_BASE}@${DIGEST_AMD64}" "${GHCR_IMAGE_BASE}@${DIGEST_ARM64}"
          docker manifest push "${GHCR_IMAGE_BASE}:${VERSION_SHA}"
          docker manifest create "${GHCR_IMAGE_BASE}:latest" "${GHCR_IMAGE_BASE}@${DIGEST_AMD64}" "${GHCR_IMAGE_BASE}@${DIGEST_ARM64}"
          docker manifest push "${GHCR_IMAGE_BASE}:latest"
